{% block stylesheets %}
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
   
    <style>
        :root {
            --primary-color: rgb(1, 91, 9); /* bleu professionnel */
            --secondary-color:rgb(1, 91, 9);
            --accent-color: #d9534f; /* rouge d'alerte */
            --background-color: #f8f9fa;
        }

        body {
            background: var(--background-color);
            font-family: 'Roboto', sans-serif;
        }

        .info-item {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            border: 1px solid #e9ecef;
            padding: 2rem;
            margin: 2rem auto;
            max-width: 800px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .info-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        }

        .custom-btn {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: #fff !important;
            padding: 12px 28px;
            border-radius: 5px;
            border: none;
            font-weight: 500;
            letter-spacing: 0.5px;
            transition: background 0.3s ease, box-shadow 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .custom-btn::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: rgba(255, 255, 255, 0.1);
            transform: rotate(45deg);
            transition: transform 0.6s ease;
        }

        .custom-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        }

        .custom-btn:hover::after {
            transform: translate(100%, 100%);
        }

        .form-control, .form-select {
            border: 2px solid #ced4da;
            border-radius: 5px;
            padding: 0.75rem 1rem;
            background: #fff;
            transition: border-color 0.3s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgb(58, 140, 65);;
            background: #fff;
        }

        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
        }

        .is-invalid {
            border-color: var(--accent-color) !important;
            background: rgba(217, 83, 79, 0.1);
        }

        .file-preview {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }

        .file-preview-item {
            position: relative;
            border-radius: 5px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
            border: 1px solid #e9ecef;
        }

        .file-preview-item img {
            width: 100%;
            height: 120px;
            object-fit: cover;
        }

        .file-preview-item p {
            padding: 0.5rem;
            font-size: 0.85rem;
            margin: 0;
            background: #f8f9fa;
            text-align: center;
        }

        .remove-file {
            position: absolute;
            top: 5px;
            right: 5px;
            background: var(--accent-color);
            color: #fff;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .file-preview-item:hover .remove-file {
            opacity: 1;
        }

        @media (max-width: 768px) {
            .info-item {
                padding: 1.5rem;
                margin: 1rem;
            }

            .custom-btn {
                width: 100%;
                padding: 1rem;
            }
        }
    </style>
{% endblock %}

{% block form %}
<div class="info-item" data-aos="fade" data-aos-delay="500">
    {{ form_start(form, { 'method': 'POST', 'action': formAction, 'attr': {'novalidate': 'novalidate'} }) }}

    <div class="row gy-4">
      
        <div class="col-md-6">
            <div class="form-group">
                {{ form_label(form.type, 'Type de réclamation', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.type, {'attr': {'class': 'form-select'}}) }}
                {{ form_errors(form.type) }}
            </div>
        </div>

      
        <div class="col-md-6">
            <div class="form-group">
                <div class="input-group">
                    {{ form_label(form.user, 'Utilisateur concerné', {'label_attr': {'class': 'input-group-text'}}) }}
                    {{ form_widget(form.user, {'attr': {'class': 'form-select'}}) }}
                </div>
                {{ form_errors(form.user) }}
            </div>
        </div>

      
        <div class="col-12">
            <div class="form-group">
                {{ form_label(form.sujet, 'Sujet', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.sujet, {'attr': {'class': 'form-control' ~ (not form.sujet.vars.valid ? ' is-invalid' : '')}}) }}
                {{ form_errors(form.sujet) }}
            </div>
        </div>

       
        <div class="col-12">
            <div class="form-group">
                {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.description, {
                    'attr': {
                        'class': 'form-control' ~ (not form.description.vars.valid ? ' is-invalid' : ''),
                        'placeholder': 'Décrivez votre réclamation en détail...',
                        'rows': 6
                    }
                }) }}
                {{ form_errors(form.description) }}
            </div>
        </div>

     
        <div class="col-12">
            <div class="form-group">
                {{ form_label(form.file, 'Documents joints', {'label_attr': {'class': 'form-label mb-3'}}) }}
                {{ form_widget(form.file, {'attr': {
                    'class': 'form-control' ~ (not form.file.vars.valid ? ' is-invalid' : ''),
                    'multiple': true,
                    'accept': 'image/jpeg, image/png, application/pdf'
                }}) }}
                <small class="form-text text-muted">Formats acceptés: PDF, JPG, PNG (max 5Mo)</small>
                {{ form_errors(form.file) }}
            </div>
        </div>

   
        <div class="col-12">
            <div id="file-preview" class="file-preview"></div>
        </div>

 
        <div class="col-12 text-center">
            {{ form_widget(form.submitButton, {'attr': {'class': 'btn custom-btn', 'id': 'submit-btn'}}) }}
        </div>
    </div>
    {{ form_end(form) }}
</div>
{% endblock %}

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const fileInput = document.querySelector("input[type='file']");
            const filePreview = document.getElementById("file-preview");

       
            fileInput.addEventListener("change", function () {
                filePreview.innerHTML = "";
                Array.from(fileInput.files).forEach(file => {
                    const previewItem = document.createElement("div");
                    previewItem.className = "file-preview-item";
                    
                    const removeBtn = document.createElement("button");
                    removeBtn.className = "remove-file";
                    removeBtn.innerHTML = "×";
                    
                    removeBtn.addEventListener("click", () => {
                        const newFiles = Array.from(fileInput.files).filter(f => f !== file);
                        const dataTransfer = new DataTransfer();
                        newFiles.forEach(f => dataTransfer.items.add(f));
                        fileInput.files = dataTransfer.files;
                        previewItem.remove();
                    });

                    if (file.type.startsWith("image/")) {
                        const img = document.createElement("img");
                        img.src = URL.createObjectURL(file);
                        previewItem.appendChild(img);
                    } else {
                        const fileName = document.createElement("p");
                        fileName.textContent = file.name;
                        previewItem.appendChild(fileName);
                    }

                    previewItem.appendChild(removeBtn);
                    filePreview.appendChild(previewItem);
                });
            });

        
            document.querySelector("form").addEventListener("submit", function(e) {
                const submitBtn = document.getElementById("submit-btn");
                submitBtn.innerHTML = `
                    <span class="spinner-border spinner-border-sm" role="status"></span>
                    Envoi en cours...
                `;
                submitBtn.disabled = true;
            });
        });
    </script>
{% endblock %}