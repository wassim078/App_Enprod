security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            id: App\Security\Bcrypt2aPasswordHasher
            algorithm: 'bcrypt'
            cost: 13
            # Force 2a format using PHP's native function
            hash_algorithm: '2a'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: 
                    lexik_jwt_authentication.handler.authentication_success
                failure_handler: 
                    lexik_jwt_authentication.handler.authentication_failure   


        api:
            pattern: ^/api
            stateless: true
            jwt: ~        
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFromAuthenticator
            entry_point: form_login
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: app_login
                # where to redirect after logout
                # target: app_any_route
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:

        - { path: ^/api/login, roles: PUBLIC_ACCESS } # Allow access to the login endpoint
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/templatefrontoffice/collect, roles: [ROLE_CLIENT, ROLE_LIVREUR, ROLE_ENTREPRISE] }
        - { path: ^/templatefrontoffice/annonce, roles: [ROLE_CLIENT, ROLE_LIVREUR, ROLE_ENTREPRISE] } 
        - { path: ^/templatefrontoffice/forum, roles: [ROLE_CLIENT, ROLE_LIVREUR, ROLE_ENTREPRISE] }
        - { path: ^/templatefrontoffice/reclamation, roles: [ROLE_CLIENT, ROLE_LIVREUR, ROLE_ENTREPRISE] } 
        - { path: ^/templatefrontoffice, roles: PUBLIC_ACCESS  }   #
        - { path: ^/login, roles: PUBLIC_ACCESS } # Allow everyone to access the login page
        - { path: ^/register, roles: PUBLIC_ACCESS } # Allow everyone to access the registration page
        - { path: ^/templatebackoffice, roles: ROLE_ADMIN} # Only admins can access the dashboard
        - { path: ^/commande/checkout, roles: ROLE_ENTREPRISE }
         # Protect all API routes
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
